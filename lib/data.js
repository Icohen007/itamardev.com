import { TECH_TYPE } from './consts';

export const techCards = [
  { imageSrc: 'html-5.svg', text: 'HTML', type: TECH_TYPE.LANGUAGES },
  { imageSrc: 'css-3.svg', text: 'CSS', type: TECH_TYPE.LANGUAGES },
  { imageSrc: 'javascript.svg', text: 'Javascript', type: TECH_TYPE.LANGUAGES },
  { imageSrc: 'java.svg', text: 'Java', type: TECH_TYPE.LANGUAGES },
  { imageSrc: 'python.svg', text: 'Python', type: TECH_TYPE.LANGUAGES },
  { imageSrc: 'sql.svg', text: 'SQL', type: TECH_TYPE.LANGUAGES },
  { imageSrc: 'c.svg', text: 'C Language', type: TECH_TYPE.LANGUAGES },
  { imageSrc: 'react.svg', text: 'React.js', type: TECH_TYPE.FRONTEND },
  { imageSrc: 'redux.svg', text: 'Redux', type: TECH_TYPE.FRONTEND },
  { imageSrc: 'scss.svg', text: 'SCSS', type: TECH_TYPE.FRONTEND },
  { imageSrc: 'css-in-js.png', text: 'CSS in JS', type: TECH_TYPE.FRONTEND },
  { imageSrc: 'next-js.svg', text: 'Next.js', type: TECH_TYPE.FRONTEND },
  { imageSrc: 'spring.svg', text: 'Spring Boot', type: TECH_TYPE.BACKEND },
  { imageSrc: 'nodejs.svg', text: 'Node.js', type: TECH_TYPE.BACKEND },
  { imageSrc: 'express.png', text: 'Express', type: TECH_TYPE.BACKEND },
  { imageSrc: 'docker.svg', text: 'Docker', type: TECH_TYPE.BACKEND },
  { imageSrc: 'mysql.svg', text: 'MySQL', type: TECH_TYPE.DATABASE },
  { imageSrc: 'mongodb.png', text: 'Mongo DB', type: TECH_TYPE.DATABASE },
  { imageSrc: 'vertica.svg', text: 'Vertica', type: TECH_TYPE.DATABASE },
  { imageSrc: 'firebase.svg', text: 'FireStore', type: TECH_TYPE.DATABASE },
  { imageSrc: 'selenium.svg', text: 'Selenium', type: TECH_TYPE.TESTING },
  { imageSrc: 'junit.png', text: 'Junit', type: TECH_TYPE.TESTING },
  { imageSrc: 'jest.svg', text: 'Jest', type: TECH_TYPE.TESTING },
  { imageSrc: 'rest-assured.png', text: 'Rest Assured', type: TECH_TYPE.TESTING },
  { imageSrc: 'puppeteer.svg', text: 'Puppeteer', type: TECH_TYPE.TESTING },
  { imageSrc: 'git.svg', text: 'Git', type: TECH_TYPE.TOOLS },
  { imageSrc: 'jenkins.webp', text: 'Jenkins', type: TECH_TYPE.TOOLS },
  { imageSrc: 'jira.svg', text: 'Jira', type: TECH_TYPE.TOOLS },
  { imageSrc: 'npm.svg', text: 'NPM', type: TECH_TYPE.TOOLS },
  { imageSrc: 'eslint.svg', text: 'ESlint', type: TECH_TYPE.TOOLS },
];

export const animatedCards = [
  { title: 'Clean Code', text: "We spend most of our time reading code, let's make it readable and enjoyable.", imgSrc: 'clean-code.svg' },
  { title: 'Performance', text: 'Studies have shown the negative impact poor performance can have on business goals.', imgSrc: 'performance.svg' },
  { title: 'Testing', text: 'Less bugs leads to maintainable && flexible system which delivers a high quality product.', imgSrc: 'testing.svg' },
];

export const projects = [
  {
    id: 'slackclone',
    title: 'Slack Clone',
    subTitle: 'Chat Application with channels, direct messages and more!',
    previewImage: '/projects/slackclone/slackclone2.webp',
    about: 'This project is a Clone of the famous chat application Slack. \n'
           + 'Every color and pixel was measured in order to match the original app.',
    sliderImages: [
      { imgSrc: '/projects/slackclone/slackclone1.webp', imgAlt: 'screenshot1' },
      { imgSrc: '/projects/slackclone/slackclone2.webp', imgAlt: 'screenshot2' },
      { imgSrc: '/projects/slackclone/slackclone3.webp', imgAlt: 'screenshot3' },
      { imgSrc: '/projects/slackclone/slackclone4.webp', imgAlt: 'screenshot4' },
      { imgSrc: '/projects/slackclone/slackclone5.webp', imgAlt: 'screenshot5' },
    ],
    keyFeatures: [
      'Perfect Pixel design of Slack from scratch (no component libraries).',
      'Fully Responsive app, Mobile friendly.',
      'Custom Components using Styled components (CSS-in-JS).',
      'Custom Dark / Light mode with Context Api.',
      'Rich Message editor using Draft Js.',
      'Using the Firesote database to send and receive messages instantly.',
      'Email + Password / Google authentication with Firebase.',
      'Support of Channels + Direct Messages.',
      'Searching messages within channels.',
      'Tracking when users are online / offline.',
      'Favorite / Unfavorite channels.',
      'Form validations for the Login and Register forms.',
      'Securing the application with Firebase Rules.',
    ],
    techUsedIcons: [
      { iconSrc: '/devIcons/react.svg', iconTitle: 'React' },
      { iconSrc: '/devIcons/css-in-js.png', iconTitle: 'CSS-in-JS' },
      { iconSrc: '/devIcons/redux.svg', iconTitle: 'Redux' },
      { iconSrc: '/devIcons/draftjs.svg', iconTitle: 'Draft.js' },
      { iconSrc: '/devIcons/firebase.svg', iconTitle: 'Firebase' },
    ],
    sourceCodeLink: 'https://github.com/Icohen007/slack_clone',
    liveDemoLink: 'https://clone-slack.netlify.app',
  },
  {
    id: 'flixtime',
    title: 'FlixTime',
    subTitle: 'All your Favorite movies and TV Shows with a beautiful design',
    previewImage: '/projects/flixtime/flixtime2.webp',
    about: 'The main focus of this project was to sharpen my UI skills and build product with beautiful design from scratch',
    sliderImages: [
      { imgSrc: '/projects/flixtime/flixtime1.webp', imgAlt: 'screenshot1' },
      { imgSrc: '/projects/flixtime/flixtime2.webp', imgAlt: 'screenshot2' },
      { imgSrc: '/projects/flixtime/flixtime4.webp', imgAlt: 'screenshot4' },
      { imgSrc: '/projects/flixtime/flixtime3.webp', imgAlt: 'screenshot3' },
    ],
    keyFeatures: [
      'Design UI without any component system, only pure CSS (Styled Components).',
      '100% Responsive, using Media queries, Grid & Flexbox layouts.',
      'Built with React Hooks and wrote custom hooks to create reusable functionality',
      'Server side rendered app, with serverless functions to fetch the data.',
      'Using TMDB API as the data source, parallel fetching with axios.',
      'Functionality: Searching, Filtering and Sorting.',
    ],
    techUsedIcons: [
      { iconSrc: '/devIcons/next-js.svg', iconTitle: 'Next.js' },
      { iconSrc: '/devIcons/react.svg', iconTitle: 'React' },
      { iconSrc: '/devIcons/css-in-js.png', iconTitle: 'CSS-in-JS' },
    ],
    sourceCodeLink: 'https://github.com/Icohen007/flixtime',
    liveDemoLink: 'https://flixtime.now.sh',
  },
  {
    id: 'nextyshop',
    title: 'NextyShop',
    subTitle: 'The best shop in the city',
    previewImage: '/projects/nexty/nexty1.jpg',
    about: 'in this project I built eCommerce Shop - with the MERN Stack(MongoDB, Express, React, Node.js), my first fullstack application.',
    sliderImages: [
      { imgSrc: '/projects/nexty/nexty7.png', imgAlt: 'screenshot7' },
      { imgSrc: '/projects/nexty/nexty1.jpg', imgAlt: 'screenshot1' },
      { imgSrc: '/projects/nexty/nexty2.jpg', imgAlt: 'screenshot2' },
      { imgSrc: '/projects/nexty/nexty3.jpg', imgAlt: 'screenshot3' },
      { imgSrc: '/projects/nexty/nexty4.jpg', imgAlt: 'screenshot4' },
      { imgSrc: '/projects/nexty/nexty5.jpg', imgAlt: 'screenshot5' },
      { imgSrc: '/projects/nexty/nexty6.jpg', imgAlt: 'screenshot6' },
    ],
    keyFeatures: [
      'Creating an entire Express API from scratch',
      'User authentication with JWT and cookies',
      'Password hashing with bcrypt',
      'Authorization, Roles, and Protected Routes',
      'Dynamically uploading images with Cloudinary API',
      'Modelling database content with Mongoose schemas',
      'Pagination with MongoDB',
      'Payment of Stripe API',
      'Form and requests Validation in server side',
    ],
    techUsedIcons: [
      { iconSrc: '/devIcons/next-js.svg', iconTitle: 'Next.js' },
      { iconSrc: '/devIcons/react.svg', iconTitle: 'React' },
      { iconSrc: '/devIcons/css-in-js.png', iconTitle: 'CSS-in-JS' },
      { iconSrc: '/devIcons/mongodb.png', iconTitle: 'MongoDB' },
      { iconSrc: '/devIcons/express.png', iconTitle: 'Express' },
      { iconSrc: '/devIcons/jwt.svg', iconTitle: 'JWT' },
      { iconSrc: '/devIcons/stripe.svg', iconTitle: 'Stripe' },
    ],
    sourceCodeLink: 'https://github.com/Icohen007/nextyshop',
    liveDemoLink: 'https://nextyshop.herokuapp.com',
  },
  {
    id: 'itamardev',
    title: 'itamardev.com',
    subTitle: 'Well, this is really meta...',
    previewImage: '/projects/itamardev/itamardev2.jpg',
    about: `This is the parallel to the interview question, "tell me about yourself..." ðŸ˜‰
My personal portfolio built to showcase my projects and skills. I designed and develop by myself and happy with how it turned out`,
    sliderImages: [
      { imgSrc: '/projects/itamardev/itamardev1.png', imgAlt: 'screenshot1' },
      { imgSrc: '/projects/itamardev/itamardev2.jpg', imgAlt: 'screenshot2' },
      { imgSrc: '/projects/itamardev/itamardev3.jpg', imgAlt: 'screenshot3' },
      { imgSrc: '/projects/itamardev/itamardev4.jpg', imgAlt: 'screenshot4' },
      { imgSrc: '/projects/itamardev/itamardev5.jpg', imgAlt: 'screenshot5' },
      { imgSrc: '/projects/itamardev/itamardev6.jpg', imgAlt: 'screenshot6' },
    ],
    keyFeatures: [
      'Used NextJS to build server-rendered isomorphic React portfolio application',
      'Optimized to get high Lighthouse score, by lazy loading fonts and images, code-splitting',
      'Responsive application, using CSS-in-JS, Media queries, Grid & Flexbox layouts.',
      'Wrote serverless function (using mailgun & nodemailer) to handle contact form submission',
    ],
    techUsedIcons: [
      { iconSrc: '/devIcons/next-js.svg', iconTitle: 'Next.js' },
      { iconSrc: '/devIcons/react.svg', iconTitle: 'React' },
      { iconSrc: '/devIcons/css-in-js.png', iconTitle: 'CSS-in-JS' },
      { iconSrc: '/devIcons/nodemailer.png', iconTitle: 'Nodemailer' },
    ],
    sourceCodeLink: 'https://github.com/Icohen007/itamardev.com',
    liveDemoLink: 'https://itamardev.com',
  },
  {
    id: 'shapirabros',
    title: 'Shapira Bros',
    subTitle: 'Website for Shapira brothers',
    previewImage: '/projects/shapirabros/shapirabros1.jpg',
    about: 'this is my first frontend project, I created a website for a costumer with React.js, developed with pixel perfect and custom design',
    sliderImages: [
      { imgSrc: '/projects/shapirabros/shapirabros6.png', imgAlt: 'screenshot6' },
      { imgSrc: '/projects/shapirabros/shapirabros1.jpg', imgAlt: 'screenshot1' },
      { imgSrc: '/projects/shapirabros/shapirabros2.jpg', imgAlt: 'screenshot2' },
      { imgSrc: '/projects/shapirabros/shapirabros3.jpg', imgAlt: 'screenshot3' },
      { imgSrc: '/projects/shapirabros/shapirabros4.jpg', imgAlt: 'screenshot4' },
      { imgSrc: '/projects/shapirabros/shapirabros5.jpg', imgAlt: 'screenshot5' },
    ],
    keyFeatures: [
      'Creating interactive website with React.js',
      'Developed fully responsive front-end application using modern CSS-in-JS solution Styled Components to build reusable React components',
    ],
    techUsedIcons: [
      { iconSrc: '/devIcons/react.svg', iconTitle: 'React' },
      { iconSrc: '/devIcons/css-in-js.png', iconTitle: 'CSS-in-JS' },
    ],
    liveSiteLink: 'https://shapira-bros.com',
  },
];
